[{"C:\\project\\weeklyRestaurant2\\front\\src\\index.js":"1","C:\\project\\weeklyRestaurant2\\front\\src\\App.jsx":"2","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Navigation.jsx":"3","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Login.jsx":"4","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingDetail.jsx":"5","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Main.jsx":"6","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Inventory.jsx":"7","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingList.jsx":"8","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingForm.jsx":"9","C:\\project\\weeklyRestaurant2\\front\\src\\host.js":"10","C:\\project\\weeklyRestaurant2\\front\\src\\component\\InventoryItem.jsx":"11","C:\\project\\weeklyRestaurant2\\front\\src\\component\\InventoryPopup.jsx":"12","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingDetailPop.jsx":"13","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Calendar.jsx":"14","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingListPop.jsx":"15","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingListItem.jsx":"16","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CalendarItem.jsx":"17","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingFormSelectOption.jsx":"18","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingFormCustomOption.jsx":"19"},{"size":309,"mtime":1611825993462,"results":"20","hashOfConfig":"21"},{"size":1664,"mtime":1611303654743,"results":"22","hashOfConfig":"21"},{"size":1731,"mtime":1611303613445,"results":"23","hashOfConfig":"21"},{"size":1725,"mtime":1611303613441,"results":"24","hashOfConfig":"21"},{"size":4719,"mtime":1611303613410,"results":"25","hashOfConfig":"21"},{"size":1627,"mtime":1611408266075,"results":"26","hashOfConfig":"21"},{"size":4928,"mtime":1612169862691,"results":"27","hashOfConfig":"21"},{"size":1756,"mtime":1611303613420,"results":"28","hashOfConfig":"21"},{"size":13308,"mtime":1612172330084,"results":"29","hashOfConfig":"21"},{"size":109,"mtime":1611303654940,"results":"30","hashOfConfig":"21"},{"size":900,"mtime":1612171970537,"results":"31","hashOfConfig":"21"},{"size":5008,"mtime":1612170122365,"results":"32","hashOfConfig":"21"},{"size":5913,"mtime":1611303613414,"results":"33","hashOfConfig":"21"},{"size":7308,"mtime":1611828429489,"results":"34","hashOfConfig":"21"},{"size":2771,"mtime":1611303613427,"results":"35","hashOfConfig":"21"},{"size":2714,"mtime":1611418328260,"results":"36","hashOfConfig":"21"},{"size":8661,"mtime":1611834965070,"results":"37","hashOfConfig":"21"},{"size":4199,"mtime":1611835077234,"results":"38","hashOfConfig":"21"},{"size":1372,"mtime":1611670063292,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"13ujxcx",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"42"},"C:\\project\\weeklyRestaurant2\\front\\src\\index.js",[],["91","92"],"C:\\project\\weeklyRestaurant2\\front\\src\\App.jsx",[],"C:\\project\\weeklyRestaurant2\\front\\src\\component\\Navigation.jsx",["93"],"import React, { useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from '../images/logo.png';\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst Navigation = (props) => {\r\n  const {islogin, setIslogin} = props\r\n\r\n  const handleLogout = useCallback(\r\n    () => {\r\n      axios.get(`${host.server}/member/logout`, {\r\n        withCredentials: true\r\n      }).then((result) => {\r\n        setIslogin(false)\r\n      }).catch( error => { console.log('failed', error) })\r\n    }, [setIslogin])\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"layoutWrap\">\r\n        <h1 className=\"logo\">\r\n          <Link to=\"/\">\r\n            <img\r\n              src=\"https://png2.cleanpng.com/sh/4e46ea245115c8278f5307440fa79692/L0KzQYm3U8MxN5Z6iZH0aYP2gLBuTfJqe6V3h59sYXboPbb5jfl1aV5oh9D7YXSwfbL1ifxiNaNqiAZqdYLkfsW0kvV0fJJ6itN3dD3vf7j2TcViapY8TNZsMHWzdYS4Tsc4PGM4TaU8MUW1QoW6UcE6PmE6T6g3cH7q/kisspng-bistro-cafe-ermita-conrad-manila-restaurant-restaurant-logo-5abe74dc0e0e31.7742353315224311960576.png\"\r\n              src={logo}\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n        </h1>\r\n        <ul>\r\n          <li><Link to=\"/cookingList\">요리 목록</Link></li>\r\n          {\r\n            islogin \r\n            ? \r\n            <>\r\n              <li><Link to=\"/cookingForm\">요리 추가</Link></li>\r\n              <li><Link to=\"/inventory\">재고 현황</Link></li>\r\n            </>\r\n            : null\r\n          }\r\n        </ul>\r\n        {\r\n          islogin\r\n          ? <button className=\"login\" onClick={handleLogout} >로그아웃</button>\r\n          : <Link to=\"/login\" className=\"login\">로그인</Link>\r\n        }\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Login.jsx",["94"],"import React, { useCallback, useState } from \"react\";\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst Login = ({ setIslogin }) => {\r\n\r\n  const [loginValue, setLoginValue] = useState(\r\n    {\r\n      username: 'test',\r\n      password: 'abcd1234',\r\n    }\r\n  );\r\n\r\n  const onLoginInputId = useCallback((e) => {\r\n    e.preventDefault();\r\n    setLoginValue({ ...loginValue, username: e.target.value });\r\n  }, [loginValue])\r\n\r\n  const onLoginInputPassword = useCallback((e) => {\r\n    e.preventDefault();\r\n    setLoginValue({ ...loginValue, password: e.target.value });\r\n    setTimeout(() => { console.log(loginValue) }, 1000)\r\n  }, [loginValue])\r\n\r\n  const handleLogin = useCallback((event) => {\r\n    event.preventDefault();\r\n    axios.post(`${host.server}/member/login`, loginValue, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      console.log(result)\r\n      setIslogin(true)\r\n    }).catch(error => { console.log('failed', error) })\r\n  }, [loginValue]);\r\n\r\n  return (\r\n    <form className=\"Login\">\r\n      <div className=\"Login__title\">로그인</div>\r\n      <div className=\"Login__inputWrap\">\r\n        <dl>\r\n          <dt>ID</dt>\r\n          <dd>\r\n            <input type=\"text\" onChange={onLoginInputId} value={loginValue.username} />\r\n          </dd>\r\n        </dl>\r\n        <dl>\r\n          <dt>Password</dt>\r\n          <dd>\r\n            <input type=\"password\" onChange={onLoginInputPassword} value={loginValue.password} />\r\n          </dd>\r\n        </dl>\r\n        <div className=\"Login__buttonWrap\">\r\n          <button className=\"Login__button\" onClick={handleLogin}>\r\n            로그인\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingDetail.jsx",["95","96"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport InventoryItem from './InventoryItem'\r\nconst host = require(\"../host\");\r\n\r\nconst CookingDetail = () => {\r\n    let { cookingId } = useParams();\r\n\r\n    const [cookingDetail, setCookingDetail] = useState()\r\n\r\n    useEffect(()=> {\r\n        handleDetail()\r\n    }, [])\r\n\r\n    const handleDetail = useCallback(() => {\r\n    axios.get(`${host.server}/recipe/${cookingId}`, {\r\n        withCredentials: true\r\n      }).then((result) => {\r\n        setCookingDetail(result.data.data);\r\n    }).catch( error => { console.log('failed', error) });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {cookingDetail && (\r\n                <div className=\"LineBox\">\r\n                    <h2>요리 상세</h2>\r\n                    <div className=\"CookingDetail\">\r\n                        <div className=\"CookingDetail__top\">\r\n                            <div className=\"CookingDetail__desc\">\r\n                                <div className=\"CookingDetail__title\">{cookingDetail.name}</div>\r\n                                <div className=\"CookingDetail__imgUrl\">\r\n                                    <span>이미지 URL</span>\r\n                                    <p>{cookingDetail.img}</p>\r\n                                </div>\r\n                                <div className=\"CookingDetail__buttonWrap\">\r\n                                    <button className=\"CookingDetail__button CookingDetail__button--edit\">수정하기</button>\r\n                                    <button className=\"CookingDetail__button CookingDetail__button--delete\">삭제</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"CookingDetail__thumb\">\r\n                                <img src={cookingDetail.img} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"CookingDetail__ingredient\">\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">육류</dt>\r\n                                {\r\n                                    cookingDetail.contents.meat.contents ? (\r\n                                        cookingDetail.contents.meat.contents.map((item, i)=>{\r\n                                        return(\r\n                                            <InventoryItem ingredient={item} key={i} />\r\n                                        )})\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">어류</dt>\r\n                                {\r\n                                    cookingDetail.contents.fish.contents ? (\r\n                                        cookingDetail.contents.fish.contents.map((item, i)=>{\r\n                                        return(\r\n                                            <InventoryItem ingredient={item} key={i} />\r\n                                        )})\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">부재료</dt>\r\n                                {\r\n                                    cookingDetail.contents.misc.contents ? (\r\n                                        cookingDetail.contents.misc.contents.map((item, i)=>{\r\n                                        return(\r\n                                            <InventoryItem ingredient={item} key={i} />\r\n                                        )})\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">양념(소스)</dt>\r\n                                {\r\n                                    cookingDetail.contents.sauce.contents ? (\r\n                                        cookingDetail.contents.sauce.contents.map((item, i)=>{\r\n                                        return(\r\n                                            <InventoryItem ingredient={item} key={i} />\r\n                                        )})\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CookingDetail;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Main.jsx",["97"],"import React, { useState } from 'react';\r\nimport Calendar from './Calendar';\r\nimport CookingDetailPop from './CookingDetailPop';\r\nimport CookingListPop from './CookingListPop';\r\n\r\nconst Main = (props) => {\r\n  \r\n  const { islogin } = props;\r\n  const [ isDetailPopup, setIsDetailPopup ] = useState(false);\r\n  const [ isListPopup, setIsListPopup ] = useState(false);\r\n  const [ popupCookingId, setPopupCookingId ] = useState();\r\n  const [ calendarSelectData, setCalendarSelectData ] = useState();\r\n  const [calendarData, setCalendarData] = useState();\r\n\r\n  return (\r\n    <>\r\n      <Calendar\r\n        setIsDetailPopup={setIsDetailPopup}\r\n        setIsListPopup={setIsListPopup}\r\n        islogin={islogin}\r\n        calendarSelectData={calendarSelectData}\r\n        setPopupCookingId={setPopupCookingId}\r\n        calendarData={calendarData}\r\n        setCalendarData={setCalendarData}\r\n        calendarSelectData={calendarSelectData}\r\n        setCalendarSelectData={setCalendarSelectData}\r\n      />\r\n      {\r\n        isDetailPopup &&\r\n          <CookingDetailPop\r\n            setIsDetailPopup={setIsDetailPopup}\r\n            popupCookingId={popupCookingId}\r\n          />\r\n      }\r\n      {\r\n        isListPopup &&\r\n          <CookingListPop\r\n            setIsListPopup={setIsListPopup}\r\n            setIsDetailPopup={setIsDetailPopup}\r\n            setPopupCookingId={setPopupCookingId}\r\n            calendarData={calendarData}\r\n            setCalendarData={setCalendarData}\r\n            popupCookingId={popupCookingId}\r\n            calendarSelectData={calendarSelectData}\r\n          />\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Main;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Inventory.jsx",[],"C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingList.jsx",["98"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport CookingListItem from \"./CookingListItem\";\r\nconst host = require(\"../host\");\r\n\r\nconst CookingList = () => {\r\n\r\n  const [cookingList, setCookingList] = useState([])\r\n\r\n  useEffect(()=> {\r\n    handleList()\r\n  }, [])\r\n\r\n  const handleList = useCallback((event) => {\r\n    if(event) {\r\n      let children = event.target.parentElement.children;\r\n      for(let i = 0; i < children.length; i++) {\r\n        children[i].classList.remove('CookingList__tabItem--active')\r\n      }\r\n      event.target.classList.add('CookingList__tabItem--active')\r\n    } \r\n\r\n    axios.get(`${host.server}/recipe/list?style=${event ? event.target.attributes.nation.value : `kor`}`, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      setCookingList(result.data.data);\r\n    }).catch( error => { console.log('failed', error) });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"LineBox\">\r\n      <h2>요리 목록</h2>\r\n      <div className=\"CookingList\">\r\n        <ul className=\"CookingList__tab\">\r\n          <li className=\"CookingList__tabItem CookingList__tabItem--active\" onClick={handleList} nation={`kor`}>\r\n            한식\r\n          </li>\r\n          <li className=\"CookingList__tabItem\" onClick={handleList} nation={`chn`}>중식</li>\r\n          <li className=\"CookingList__tabItem\" onClick={handleList} nation={`wes`}>양식</li>\r\n        </ul>\r\n        <ul className=\"CookingList__dishList\">\r\n          {\r\n            cookingList.map((item) => {\r\n              return (\r\n                <CookingListItem cookingList={item} key={item.id} />\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CookingList;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingForm.jsx",["99","100","101"],"C:\\project\\weeklyRestaurant2\\front\\src\\host.js",[],"C:\\project\\weeklyRestaurant2\\front\\src\\component\\InventoryItem.jsx",["102"],"C:\\project\\weeklyRestaurant2\\front\\src\\component\\InventoryPopup.jsx",["103","104","105"],"C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingDetailPop.jsx",["106","107","108"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport InventoryItem from './InventoryItem'\r\nconst host = require(\"../host\");\r\n\r\n\r\nconst CookingDetailPop = ({ setIsDetailPopup, popupCookingId = 1134 }) => {\r\n    const handleCloseDetail = useCallback(\r\n        () => {\r\n            setIsDetailPopup(false)\r\n        })\r\n\r\n    const [cookingDetail, setCookingDetail] = useState()\r\n\r\n    console.log(cookingDetail, popupCookingId)\r\n\r\n    useEffect(() => {\r\n        handleDetail()\r\n    }, [])\r\n\r\n    const handleDetail = useCallback(() => {\r\n        axios.get(`${host.server}/recipe/${popupCookingId}`, {\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            console.log(result.data)\r\n            setCookingDetail(result.data.data);\r\n        }).catch(error => { console.log('failed', error) });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {cookingDetail ? (\r\n\r\n                <article className=\"LayoutPopup\">\r\n                    <div className=\"LayoutPopup__header\">\r\n                        <h2 className=\"LayoutPopup__title\">상세보기 {popupCookingId}</h2>\r\n                        <button className=\"LayoutPopup__close\" onClick={handleCloseDetail}><i className=\"fas fa-times\"></i><i className=\"ir\">닫기</i></button>\r\n                    </div>\r\n                    <div className=\"CookingDetail\">\r\n                        <div className=\"CookingDetail__top\">\r\n                            <div className=\"CookingDetail__desc\">\r\n                                <div className=\"CookingDetail__title\">{cookingDetail.name}</div>\r\n                                <div className=\"CookingDetail__imgUrl\">\r\n                                    <span>이미지 URL</span>\r\n                                    <p>{cookingDetail.img}</p>\r\n                                </div>\r\n                                {/* <div className=\"CookingDetail__buttonWrap\">\r\n                                    <button className=\"CookingDetail__button CookingDetail__button--edit\">수정하기</button>\r\n                                    <button className=\"CookingDetail__button CookingDetail__button--delete\">삭제</button>\r\n                                </div> */}\r\n                            </div>\r\n                            <div className=\"CookingDetail__thumb\">\r\n                                <img src={cookingDetail.img} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"CookingDetail__ingredient\">\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">육류</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.meat.contents ? (\r\n                                            cookingDetail.contents.meat.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">어류</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.fish.contents ? (\r\n                                            cookingDetail.contents.fish.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">부재료</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.misc.contents ? (\r\n                                            cookingDetail.contents.misc.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">양념(소스)</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.sauce.contents ? (\r\n                                            cookingDetail.contents.sauce.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n\r\n            ) : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CookingDetailPop;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Calendar.jsx",["109","110","111","112","113","114","115"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport CalendarItem from './CalendarItem'\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst Calendar = (props) => {\r\n\r\n  const date = new Date();\r\n  const getWeek = useCallback((dowOffset) => {\r\n    dowOffset = typeof (dowOffset) == 'number' ? dowOffset : 0;\r\n    var newdate = new Date();\r\n    var newYear = new Date(newdate.getFullYear(), 0, 1);\r\n    var day = newYear.getDay() - dowOffset;\r\n    day = (day >= 0 ? day : day + 7);\r\n    var daynum = Math.floor((newdate.getTime() - newYear.getTime() -\r\n      (newdate.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;\r\n    var weeknum;\r\n    if (day < 4) {\r\n      weeknum = Math.floor((daynum + day - 1) / 7) + 1;\r\n      if (weeknum > 52) {\r\n        let nYear = new Date(newdate.getFullYear() + 1, 0, 1);\r\n        let nday = nYear.getDay() - dowOffset;\r\n        nday = nday >= 0 ? nday : nday + 7;\r\n        weeknum = nday < 4 ? 1 : 53;\r\n      }\r\n    }\r\n    else {\r\n      weeknum = Math.floor((daynum + day - 1) / 7);\r\n    }\r\n    return weeknum;\r\n  });\r\n\r\n  const getFirstDay = (year) => {\r\n    return new Date(year, 0, 1).getDay() - 1;\r\n  };\r\n\r\n  const todayYear = date.getFullYear(); // 년\r\n  const todayMonth = date.getMonth() + 1; // 월\r\n  const todayDate = date.getDate(); // 날짜\r\n  const todayDay = date.getDay(); // 요일\r\n  const todayWeek = getWeek(getFirstDay(todayYear)); // 몇주차\r\n  const lastDate = new Date(todayYear, todayMonth, 0).getDate();\r\n\r\n  const getLastDay = function (year, month) {\r\n    return new Date(year, month, 0).getDay();\r\n  };\r\n\r\n  const getLastDate = function (year, month) {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  const getPrevLastDate = function (year, month) {\r\n    if (month === 1) {\r\n      return new Date(year - 1, 12, 0).getDate();\r\n    } else {\r\n      return new Date(year, month - 1, 0).getDate();\r\n    }\r\n  }\r\n\r\n  const {calendarData, setCalendarData, calendarSelectData, setIsDetailPopup, setIsListPopup, islogin, setPopupCookingId, setCalendarSelectData } = props;\r\n  const [calendarDateInfo, setCalendarDateInfo] = useState({\r\n    setYear: todayYear,\r\n    setMonth: todayMonth,\r\n    setDay: todayDay,\r\n    setDate: todayDate,\r\n    setWeek: todayWeek,\r\n  });\r\n  const [calendarDateArr, setCalendarDataArr] = useState([]);\r\n\r\n  const calendarCalc = useCallback((year, month, day, date) => {\r\n    let calendarArr = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      if (day > i) {\r\n        if (date - day + i <= 0) {\r\n          calendarArr.unshift(getPrevLastDate(year, month) - i);\r\n        } else {\r\n          calendarArr.push(date - day + i);\r\n        }\r\n      } else {\r\n        if (date - day + i > lastDate) {\r\n          calendarArr.push(i - getLastDay(year, month));\r\n        } else {\r\n          calendarArr.push(date - day + i);\r\n        }\r\n      }\r\n    }\r\n    setCalendarDataArr(calendarArr)\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(`${host.server}/plan/${calendarDateInfo.setYear}/${calendarDateInfo.setWeek}`, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      setCalendarData(result.data)\r\n    }).catch(error => { console.log('failed', error) })\r\n\r\n    \r\n  }, [calendarDateInfo])\r\n\r\n  useEffect(() => {\r\n    calendarCalc(calendarDateInfo.setYear, calendarDateInfo.setMonth, calendarDateInfo.setDay, calendarDateInfo.setDate);\r\n  }, [calendarData])\r\n\r\n\r\n  const prevCalendar = useCallback(() => {\r\n    // 1월에서 이전달로 갈시\r\n    if (calendarDateInfo.setDate < 8 && calendarDateInfo.setMonth === 1) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setYear: calendarDateInfo.setYear - 1,\r\n        setMonth: 12,\r\n        setDate: 31 + (calendarDateInfo.setDate - 7),\r\n        setWeek: 53,\r\n      })\r\n    } else if (calendarDateInfo.setDate < 8) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setMonth: calendarDateInfo.setMonth - 1,\r\n        setDate: getPrevLastDate(calendarDateInfo.setYear, calendarDateInfo.setMonth) + (calendarDateInfo.setDate - 7),\r\n        setWeek: calendarDateInfo.setWeek - 1,\r\n      })\r\n    } else {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setDate: calendarDateInfo.setDate - 7,\r\n        setWeek: calendarDateInfo.setWeek - 1,\r\n      })\r\n    }\r\n  })\r\n\r\n  const nextCalendar = useCallback(() => {\r\n    if (\r\n      calendarDateInfo.setDate > 24\r\n      && calendarDateInfo.setDay !== 6\r\n      && calendarDateInfo.setMonth === 12\r\n    ) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setYear: calendarDateInfo.setYear + 1,\r\n        setMonth: 1,\r\n        setDate: 1 + (calendarDateInfo.setDate - 25),\r\n        setWeek: 2,\r\n      })\r\n    } else if (\r\n      calendarDateInfo.setDate === 31\r\n      && calendarDateInfo.setDay === 6\r\n      && calendarDateInfo.setMonth === 12\r\n    ) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setYear: calendarDateInfo.setYear + 1,\r\n        setMonth: 1,\r\n        setDate: 1 + (calendarDateInfo.setDate - 25),\r\n        setWeek: 1,\r\n      })\r\n    } else if (calendarDateInfo.setDate > 24) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setMonth: calendarDateInfo.setMonth + 1,\r\n        setDate: 7 - getLastDate(calendarDateInfo.setYear, calendarDateInfo.setMonth) + calendarDateInfo.setDate,\r\n        setWeek: calendarDateInfo.setWeek + 1,\r\n      })\r\n    } else {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setDate: calendarDateInfo.setDate + 7,\r\n        setWeek: calendarDateInfo.setWeek + 1,\r\n      })\r\n    }\r\n  })\r\n\r\n  const todayCalendar = useCallback(() => {\r\n    setCalendarDateInfo({\r\n      setYear: todayYear,\r\n      setMonth: todayMonth,\r\n      setDay: todayDay,\r\n      setDate: todayDate,\r\n      setWeek: todayWeek,\r\n    });\r\n  })\r\n\r\n  return (\r\n    <div className=\"LineBox\">\r\n      <div className=\"CalendarTitle\">\r\n        <button onClick={prevCalendar}>\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n        <h2>{calendarDateInfo.setMonth}월 주간 식단표 <button className=\"Calendar__todayBtn\" onClick={todayCalendar}>today</button></h2>\r\n        <button onClick={nextCalendar}>\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <ul className=\"Calendar\">\r\n        \r\n        {\r\n          calendarData\r\n          ? calendarDateArr.map((item, i) => {\r\n            return (\r\n              <CalendarItem\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setIsListPopup={setIsListPopup}\r\n                date={item}\r\n                week={i}\r\n                key={i}\r\n                setDay={calendarDateInfo.setDay}\r\n                calendarData={calendarData.data[i]}\r\n                fullCalendarData={calendarData}\r\n                setCalendarData={setCalendarData}\r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData}\r\n                islogin={islogin}\r\n                setPopupCookingId={setPopupCookingId}\r\n                setYear={calendarDateInfo.setYear}\r\n                setWeek={calendarDateInfo.setWeek}\r\n              />\r\n            )\r\n          })\r\n          :null\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingListPop.jsx",["116"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport CookingListItem from \"./CookingListItem\";\r\nconst host = require(\"../host\");\r\n\r\nconst CookingListPop = ({setIsListPopup, setIsDetailPopup, setPopupCookingId, popupCookingId, calendarSelectData, calendarData, setCalendarData}) => {\r\n\r\n    const [cookingList, setCookingList] = useState([])\r\n    useEffect(()=> {\r\n        handleList()\r\n    }, [])\r\n    \r\n    const handleList = useCallback((event) => {\r\n        if(event) {\r\n          let children = event.target.parentElement.children;\r\n          for(let i = 0; i < children.length; i++) {\r\n            children[i].classList.remove('CookingList__tabItem--active')\r\n          }\r\n          event.target.classList.add('CookingList__tabItem--active')\r\n        } \r\n    \r\n        axios.get(`${host.server}/recipe/list?style=${event ? event.target.attributes.nation.value : `kor`}`, {\r\n            withCredentials: true\r\n          }).then((result) => {\r\n          setCookingList(result.data.data)\r\n        }).catch( error => { console.log('failed', error) });\r\n    }, [setCookingList]);\r\n    \r\n    const handleCloseList = useCallback(\r\n        () => {\r\n            setIsListPopup(false)\r\n        },\r\n        [setIsListPopup],\r\n    )\r\n    return(\r\n        <article className=\"LayoutPopup\">\r\n            <div className=\"LayoutPopup__header\">\r\n                <h2 className=\"LayoutPopup__title\">요리 목록</h2>\r\n                <button className=\"LayoutPopup__close\" onClick={handleCloseList}><i className=\"fas fa-times\"></i><i className=\"ir\">닫기</i></button>\r\n            </div>\r\n            <div className=\"CookingList\">\r\n                <ul className=\"CookingList__tab\">\r\n                <li className=\"CookingList__tabItem CookingList__tabItem--active\" onClick={handleList} nation={`kor`}>\r\n                    한식\r\n                </li>\r\n                <li className=\"CookingList__tabItem\" onClick={handleList} nation={`chn`}>중식</li>\r\n                <li className=\"CookingList__tabItem\" onClick={handleList} nation={`wes`}>양식</li>\r\n                </ul>\r\n                <ul className=\"CookingList__dishList\">\r\n                {\r\n                    cookingList.map((item) => {\r\n                    return (\r\n                        <CookingListItem cookingList={item} key={item.id} popup={true} setIsListPopup={setIsListPopup} setIsDetailPopup={setIsDetailPopup} setPopupCookingId={setPopupCookingId} popupCookingId={popupCookingId} calendarSelectData={calendarSelectData} calendarData={calendarData} setCalendarData={setCalendarData}/>\r\n                    )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        </article>\r\n    )\r\n};\r\n\r\nexport default CookingListPop;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingListItem.jsx",["117","118","119","120","121"],"import React, {useCallback} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst CookingListItem = (props) => {\r\n    const {name, img} = props.cookingList;\r\n    const id = props.cookingList.id;\r\n    const popup = props.popup\r\n    const setIsListPopup = props.setIsListPopup;\r\n    const setIsDetailPopup = props.setIsDetailPopup;\r\n    const setPopupCookingId = props.setPopupCookingId;\r\n    const {popupCookingId, calendarSelectData, calendarData, setCalendarData} = props;\r\n\r\n    const handlePopupControl = useCallback(\r\n        () => {\r\n            setIsListPopup(prevState => false);\r\n            setIsDetailPopup(prevState => true);\r\n            setPopupCookingId(prevState => id);\r\n        },\r\n        [setIsListPopup, setIsDetailPopup, setPopupCookingId],\r\n    )\r\n\r\n    const handleCanlendarPlan = useCallback(()=>{    \r\n        setIsListPopup(prevState => false);\r\n        setPopupCookingId(prevState => id);\r\n\r\n        let planArr = [...calendarData.data];\r\n        planArr[calendarSelectData.planWeek][calendarSelectData.planEatTime] = id;\r\n\r\n        axios.put(`${host.server}/plan`,{\r\n            year: calendarSelectData.year,\r\n            week: calendarSelectData.week,\r\n            plan: planArr\r\n        },{\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            axios.get(`${host.server}/plan/${calendarSelectData.year}/${calendarSelectData.week}`, {\r\n                withCredentials: true\r\n            }).then((result) => {\r\n                setCalendarData(result.data)\r\n            }).catch(error => { console.log('failed', error) })\r\n        }).catch(error => { console.log('failed', error) })\r\n    })\r\n\r\n    return(\r\n        <li className=\"CookingList__dishItem DishItem\">\r\n            <div className=\"DishItem__thumb\">\r\n\r\n                {\r\n                    popup \r\n                    ? (\r\n                        <img src={img} onClick={handlePopupControl} />\r\n                    ) : (\r\n                        <Link to={`/cookingList/${id}`}>\r\n                            <img\r\n                                src={img}\r\n                            />\r\n                        </Link>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"DishItem__desc\">\r\n                <div className=\"DishItem__title\">{name}</div>\r\n                { popup && (\r\n                    <button className=\"DishItem__button DishItem__button--add\" onClick={handleCanlendarPlan}>\r\n                        + 추가하기\r\n                    </button>\r\n                    )\r\n                }\r\n            </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default CookingListItem;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CalendarItem.jsx",["122","123","124","125","126","127","128"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst weekArr = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\nconst emptyImage = [\"fa-utensils\", \"fa-cheese\", \"fa-hamburger\", \"fa-fish\", \"fa-ice-cream\", \"fa-apple-alt\", \"fa-carrot\", \"fa-hotdog\", \"fa-egg\", \"fa-cookie-bite\"];\r\nconst randomImageNumber = () => {\r\n    return Math.floor(Math.random() * 10);\r\n}\r\n\r\nconst CalendarItem = (props = null) => {\r\n  const { fullCalendarData, calendarData, setCalendarData, calendarSelectData, setIsDetailPopup, setIsListPopup, date, week, setYear, setWeek, setDay, islogin, setPopupCookingId, setCalendarSelectData } = props;\r\n\r\n  return (\r\n    <li\r\n      className={setDay === week ? \"Calendar__item active\" : \"Calendar__item\"}\r\n    >\r\n      <div className=\"Calendar__day\">\r\n        <span>{weekArr[week]}</span>\r\n        <b>{date}</b>\r\n      </div>\r\n      <div className=\"Calendar__menu\">\r\n        <div className=\"Calendar__section CalendarMenu\">\r\n          <div className=\"CalendarMenu__tag\">\r\n            <span>아침</span>\r\n          </div>\r\n          {\r\n            (calendarData[0] && calendarData[0].id)\r\n            ? <CalendarItemContent \r\n                name={calendarData[0].name}\r\n                id={calendarData[0].id}\r\n                img={calendarData[0].img}\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setPopupCookingId={setPopupCookingId}\r\n                islogin={islogin}\r\n                fullCalendarData={fullCalendarData}\r\n                setCalendarData={setCalendarData} \r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData} \r\n                eatTime={0} \r\n                week={week} \r\n                setYear={setYear}\r\n                setWeek={setWeek} \r\n              /> \r\n            : islogin \r\n              ? <CalendarItemAdd \r\n                  setIsListPopup={setIsListPopup} \r\n                  setCalendarSelectData={setCalendarSelectData} \r\n                  eatTime={0} \r\n                  week={week} \r\n                  setYear={setYear}\r\n                  setWeek={setWeek} \r\n                /> \r\n              : <CalendarItemEmpty />\r\n          }\r\n        </div>\r\n        <div className=\"Calendar__section CalendarMenu\">\r\n          <div className=\"CalendarMenu__tag\">\r\n            <span>점심</span>\r\n          </div>\r\n          {\r\n            (calendarData[1] && calendarData[1].id)\r\n            ? <CalendarItemContent \r\n                name={calendarData[1].name}\r\n                id={calendarData[1].id}\r\n                img={calendarData[1].img}\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setPopupCookingId={setPopupCookingId}\r\n                islogin={islogin}\r\n                fullCalendarData={fullCalendarData}\r\n                setCalendarData={setCalendarData} \r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData} \r\n                eatTime={1} \r\n                week={week} \r\n                setYear={setYear}\r\n                setWeek={setWeek} \r\n              /> \r\n            : islogin \r\n              ? <CalendarItemAdd \r\n                  setIsListPopup={setIsListPopup} \r\n                  setCalendarSelectData={setCalendarSelectData} \r\n                  eatTime={1} \r\n                  week={week} \r\n                  setYear={setYear}\r\n                  setWeek={setWeek} \r\n                /> \r\n              : <CalendarItemEmpty />\r\n          }\r\n        </div>\r\n        <div className=\"Calendar__section CalendarMenu\">\r\n          <div className=\"CalendarMenu__tag\">\r\n            <span>저녁</span>\r\n          </div>\r\n          {\r\n            (calendarData[2] && calendarData[2].id)\r\n            ? <CalendarItemContent \r\n                name={calendarData[2].name}\r\n                id={calendarData[2].id}\r\n                img={calendarData[2].img}\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setPopupCookingId={setPopupCookingId}\r\n                islogin={islogin}\r\n                fullCalendarData={fullCalendarData}\r\n                setCalendarData={setCalendarData} \r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData} \r\n                eatTime={2} \r\n                week={week} \r\n                setYear={setYear}\r\n                setWeek={setWeek} \r\n              /> \r\n            : islogin \r\n              ? <CalendarItemAdd \r\n                  setIsListPopup={setIsListPopup} \r\n                  setCalendarSelectData={setCalendarSelectData} \r\n                  eatTime={2} \r\n                  week={week} \r\n                  setYear={setYear}\r\n                  setWeek={setWeek} \r\n                /> \r\n              : <CalendarItemEmpty />\r\n          }\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\n\r\nconst CalendarItemEmpty = (props) => {\r\n  return (\r\n    <div className=\"CalendarMenu__empty\">\r\n      <i className={`fas ${emptyImage[randomImageNumber()]}`}></i>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CalendarItemAdd = (props) => {\r\n  const { setIsListPopup, setCalendarSelectData, eatTime, week, setYear, setWeek } = props;\r\n\r\n  const handleShowList = useCallback(() => {\r\n    setIsListPopup(true);\r\n    setCalendarSelectData({\r\n      year: setYear,\r\n      week: setWeek,\r\n      planWeek: week,\r\n      planEatTime: eatTime,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className=\"CalendarMenu__button CalendarMenu__button--add\"\r\n      onClick={handleShowList}\r\n    >\r\n      <i className=\"fas fa-plus\"></i>\r\n      <i className=\"ir\">메뉴 추가</i>\r\n    </button>\r\n  )\r\n}\r\n\r\nconst CalendarItemContent = (props) => {\r\n  const { setIsDetailPopup, name, id, img, setPopupCookingId, islogin, fullCalendarData, setCalendarData, calendarSelectData } = props;\r\n  const { setCalendarSelectData, eatTime, week, setYear, setWeek } = props;\r\n\r\n  const [planArrDelete, setPlanArrDelete] = useState();\r\n  const [onClickDelete, setOnclickDelete] = useState(false);\r\n\r\n  const handleShowDetail = useCallback(() => {\r\n    setPopupCookingId(id);\r\n    setIsDetailPopup(true);\r\n  });\r\n\r\n\r\n  useEffect(()=>{\r\n    console.log('handleDeleteOnCalendar')\r\n    if(onClickDelete){\r\n      const planArr = JSON.parse(JSON.stringify( fullCalendarData.data ))\r\n      for(let i = 0; i < 7; i++){\r\n        for(let j = 0; j < 3; j++){\r\n          planArr[i][j] = planArr[i][j].id\r\n        }\r\n      }\r\n      if(calendarSelectData){\r\n        setPlanArrDelete([...planArr, planArr[calendarSelectData.planWeek][calendarSelectData.planEatTime] = null]);\r\n      }\r\n      setOnclickDelete(false)\r\n    }\r\n  }, [calendarSelectData])\r\n\r\n  const handleDeleteOnCalendar = useCallback(() => {\r\n    setOnclickDelete(true)\r\n    setCalendarSelectData({\r\n      year: setYear,\r\n      week: setWeek,\r\n      planWeek: week,\r\n      planEatTime: eatTime,\r\n    });\r\n  }, [setYear, setWeek, week, eatTime]);\r\n\r\n  useEffect(() => {\r\n    console.log('planArrDelete')\r\n    // if(calendarSelectData){\r\n    //   axios.put(`${host.server}/plan`,{\r\n    //     year: calendarSelectData.year,\r\n    //     week: calendarSelectData.week,\r\n    //     plan: planArrDelete\r\n    //   },{\r\n    //       withCredentials: true\r\n    //   }).then((result) => {\r\n    //       axios.get(`${host.server}/plan/${calendarSelectData.year}/${calendarSelectData.week}`, {\r\n    //           withCredentials: true\r\n    //       }).then((result) => {\r\n    //           setCalendarData(result.data)\r\n    //       }).catch(error => { console.log('failed', error) })\r\n    //   }).catch(error => { console.log('failed', error) })\r\n    // }\r\n  }, [planArrDelete])\r\n\r\n\r\n  return (\r\n    <div className=\"CalendarMenu__wrap\">\r\n      <div className=\"CalendarMenu__thumb\">\r\n        <img\r\n          src={img}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"CalendarMenu__title\">{name}</div>\r\n      <div className=\"CalendarMenu__hover\">\r\n        <button\r\n          className=\"CalendarMenu__button CalendarMenu__button--more\"\r\n          onClick={handleShowDetail}\r\n        >\r\n          <i className=\"fas fa-search\"></i>\r\n          <i className=\"ir\">상세 보기</i>\r\n        </button>\r\n        {\r\n          islogin \r\n          ? \r\n          <button\r\n              className=\"CalendarMenu__button CalendarMenu__button--delete\"\r\n              onClick={handleDeleteOnCalendar}\r\n            >\r\n              <i className=\"far fa-trash-alt\"></i>\r\n              <i className=\"ir\">메뉴 삭제</i>\r\n          </button>\r\n          : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarItem;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingFormSelectOption.jsx",["129","130","131","132","133"],"import React, {useCallback,useEffect,useState} from \"react\";\r\n\r\nconst CookingFormSelectOption = ({targetCategory,setTargetCategory,handleValue, setHandleValue, baseOption, categoryOptionArr, cookingForm, setCookingForm, setCategoryOptionArr, group, index}) => {\r\n  // 추가 버튼 클릭 후 categoryOptionArr 변경되면 시작\r\n  useEffect(() => {\r\n    initAdd() // 배열 기본 init 값 생성\r\n    callbackOptionFuntion(group, index); // 목록에 직접입력/선택입력 옵션 추가\r\n  }, [categoryOptionArr])\r\n\r\n  // 처음 생성시 배열 기본 init 값 생성 -> handelValue 에 전달\r\n  const initAdd = useCallback(()=>{\r\n    if(targetCategory){\r\n      const copyArr = JSON.parse(JSON.stringify(cookingForm.contents[targetCategory].contents));\r\n      copyArr[index] = {\r\n        name: Object.keys(baseOption[0])[0],\r\n        amount: null,\r\n        unit: baseOption[0][Object.keys(baseOption[0])],\r\n      };\r\n      console.log(copyArr, `${targetCategory}기본 생성값 추가!`)\r\n      setHandleValue(copyArr)\r\n    }\r\n  }, [baseOption])\r\n\r\n  \r\n  // 목록 직접입력/선택입력 옵션 스위치\r\n  const [optionArr, setOptionArr] = useState();\r\n\r\n  const callbackOptionFuntion = useCallback((group, index) =>{\r\n    const copyArr = JSON.parse(JSON.stringify( categoryOptionArr ));\r\n    copyArr[group][index].selfInput = true;\r\n    setOptionArr(copyArr)\r\n  }, [categoryOptionArr])\r\n\r\n  const handleSelfInput = useCallback((e)=>{\r\n    e.preventDefault();\r\n    setCategoryOptionArr(optionArr)\r\n  }, [optionArr])\r\n\r\n\r\n  // 현재 선택 셀렉트박스\r\n  const [selectedKey, setSelectedKey] = useState({\r\n    key: Object.keys(baseOption[0]),\r\n    index: 0,\r\n  });\r\n\r\n\r\n  // select 박스 변경시\r\n  // handleValue 에 전달하기전 targetCategory 기다린 후 전달\r\n  const [handleValueArr, setHandleValueArr] = useState(); \r\n  \r\n  useEffect(() => {\r\n    if(handleValueArr){\r\n      setHandleValue(handleValueArr)\r\n    }\r\n  }, [targetCategory])\r\n\r\n  const handleInput = useCallback((e)=>{\r\n    e.preventDefault();\r\n    \r\n    const copyArr = JSON.parse(JSON.stringify(cookingForm.contents[group].contents));\r\n    \r\n\r\n    copyArr[index].name = e.currentTarget.value;\r\n    copyArr[index].unit = baseOption[e.currentTarget.selectedIndex][e.currentTarget.value];\r\n\r\n    console.log(copyArr,'handleValue change, selectbox change', group, 'category')\r\n    \r\n    setTargetCategory(group)\r\n    setHandleValueArr(copyArr)\r\n\r\n    // 현재 선택 셀렉트박스\r\n    setSelectedKey({\r\n      key: e.currentTarget.value,\r\n      index: e.currentTarget.selectedIndex,\r\n    })\r\n  }, [cookingForm, group, baseOption, index])\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   console.log(handleValue, 'handleValue',group )\r\n  //   setCookingForm({\r\n  //     ...cookingForm,\r\n  //     contents: {\r\n  //       ...cookingForm.contents,\r\n  //       [group]: {\r\n  //         id: null,\r\n  //         name: null,\r\n  //         contents: handleValue\r\n  //       }\r\n  //     }\r\n  //   })\r\n  // }, [handleValue, group])\r\n\r\n\r\n    return(\r\n      <dd>\r\n        <div className=\"CookingForm__section01\">\r\n          <select name=\"name\" id=\"\" onChange={handleInput}>\r\n            {\r\n              baseOption.map((item, index)=>{\r\n                return (\r\n                  <option value={Object.keys(item)[0]} key={index}>{Object.keys(item)[0]}</option>\r\n                )\r\n              })\r\n            }\r\n          </select>\r\n        </div>\r\n        <div className=\"CookingForm__section02\">\r\n        <input name=\"amount\" type=\"text\" onChange={handleInput} />\r\n          {/* {\r\n            cookingForm.contents[group].contents[index].amount\r\n            ? <input name=\"amount\" type=\"text\" onChange={handleInput} value={cookingForm.contents[group].contents[index].amount} />\r\n            : null\r\n          } */}\r\n        </div>\r\n        <div className=\"CookingForm__section03\">\r\n          {\r\n            baseOption[selectedKey.index][selectedKey.key]\r\n          }\r\n        </div>\r\n        <div className=\"CookingForm__section04\">\r\n          <button className=\"CookingForm__optionButton\" onClick={handleSelfInput}>직접입력</button>\r\n        </div>\r\n      </dd>\r\n    )\r\n  }\r\n\r\nexport default CookingFormSelectOption;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingFormCustomOption.jsx",["134","135"],"import React, {useCallback,useEffect,useState} from \"react\";\r\n\r\nconst CookingFormCustomOption = ({categoryOptionArr, setCategoryOptionArr, group, index}) => {\r\n  \r\n    const [optionArr, setOptionArr] = useState();\r\n  \r\n    const callbackOptionFuntion = useCallback((group, index) =>{\r\n      const copyArr = JSON.parse(JSON.stringify( categoryOptionArr ));\r\n      copyArr[group][index].selfInput = false;\r\n      setOptionArr(copyArr)\r\n    }, [categoryOptionArr])\r\n  \r\n    const handleSelfInput = useCallback((e)=>{\r\n      e.preventDefault();\r\n      setCategoryOptionArr(optionArr)\r\n    }, [optionArr])\r\n  \r\n    useEffect(() => {\r\n      callbackOptionFuntion(group, index)\r\n    }, [categoryOptionArr])\r\n  \r\n    return(\r\n      <dd className=\"CookingForm__option\">\r\n        <div className=\"CookingForm__section01\">\r\n          <input type=\"text\" placeholder=\"재료명\" />\r\n        </div>\r\n        <div className=\"CookingForm__section02\">\r\n          <input type=\"text\" placeholder=\"수량\" />\r\n        </div>\r\n        <div className=\"CookingForm__section03\">\r\n          <input type=\"text\" placeholder=\"단위\" />\r\n        </div>\r\n        <div className=\"CookingForm__section04\">\r\n          <button className=\"CookingForm__optionButton\" onClick={handleSelfInput}>선택입력</button>\r\n        </div>\r\n      </dd>\r\n      \r\n    )\r\n  }\r\n\r\n  export default CookingFormCustomOption;",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":26,"column":15,"nodeType":"142","endLine":26,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":33,"column":6,"nodeType":"145","endLine":33,"endColumn":18,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":14,"column":8,"nodeType":"145","endLine":14,"endColumn":10,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"149","line":22,"column":8,"nodeType":"145","endLine":22,"endColumn":10,"suggestions":"150"},{"ruleId":"140","severity":1,"message":"141","line":25,"column":9,"nodeType":"142","endLine":25,"endColumn":48},{"ruleId":"143","severity":1,"message":"151","line":12,"column":6,"nodeType":"145","endLine":12,"endColumn":8,"suggestions":"152"},{"ruleId":"143","severity":1,"message":"153","line":70,"column":6,"nodeType":"145","endLine":70,"endColumn":19,"suggestions":"154"},{"ruleId":"143","severity":1,"message":"155","line":91,"column":25,"nodeType":"156","endLine":91,"endColumn":36},{"ruleId":"143","severity":1,"message":"157","line":362,"column":6,"nodeType":"145","endLine":362,"endColumn":38,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":22,"column":9,"nodeType":"161","endLine":22,"endColumn":37},{"ruleId":"143","severity":1,"message":"155","line":13,"column":39,"nodeType":"156","endLine":13,"endColumn":50},{"ruleId":"143","severity":1,"message":"155","line":32,"column":32,"nodeType":"156","endLine":32,"endColumn":43},{"ruleId":"143","severity":1,"message":"162","line":76,"column":8,"nodeType":"145","endLine":76,"endColumn":29,"suggestions":"163"},{"ruleId":"143","severity":1,"message":"155","line":8,"column":31,"nodeType":"156","endLine":8,"endColumn":42},{"ruleId":"143","severity":1,"message":"147","line":19,"column":8,"nodeType":"145","endLine":19,"endColumn":10,"suggestions":"164"},{"ruleId":"143","severity":1,"message":"165","line":28,"column":8,"nodeType":"145","endLine":28,"endColumn":10,"suggestions":"166"},{"ruleId":"143","severity":1,"message":"155","line":9,"column":19,"nodeType":"156","endLine":9,"endColumn":30},{"ruleId":"143","severity":1,"message":"155","line":70,"column":24,"nodeType":"156","endLine":70,"endColumn":35},{"ruleId":"143","severity":1,"message":"167","line":98,"column":6,"nodeType":"145","endLine":98,"endColumn":24,"suggestions":"168"},{"ruleId":"143","severity":1,"message":"169","line":102,"column":6,"nodeType":"145","endLine":102,"endColumn":20,"suggestions":"170"},{"ruleId":"143","severity":1,"message":"155","line":105,"column":24,"nodeType":"156","endLine":105,"endColumn":35},{"ruleId":"143","severity":1,"message":"155","line":131,"column":24,"nodeType":"156","endLine":131,"endColumn":35},{"ruleId":"143","severity":1,"message":"155","line":172,"column":25,"nodeType":"156","endLine":172,"endColumn":36},{"ruleId":"143","severity":1,"message":"151","line":11,"column":8,"nodeType":"145","endLine":11,"endColumn":10,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":13,"column":12,"nodeType":"156","messageId":"174","endLine":13,"endColumn":26},{"ruleId":"143","severity":1,"message":"175","line":21,"column":9,"nodeType":"145","endLine":21,"endColumn":62,"suggestions":"176"},{"ruleId":"143","severity":1,"message":"155","line":24,"column":33,"nodeType":"156","endLine":24,"endColumn":44},{"ruleId":"177","severity":1,"message":"178","line":53,"column":25,"nodeType":"161","endLine":53,"endColumn":71},{"ruleId":"177","severity":1,"message":"178","line":56,"column":29,"nodeType":"161","endLine":58,"endColumn":31},{"ruleId":"172","severity":1,"message":"179","line":2,"column":8,"nodeType":"156","messageId":"174","endLine":2,"endColumn":13},{"ruleId":"172","severity":1,"message":"180","line":3,"column":7,"nodeType":"156","messageId":"174","endLine":3,"endColumn":11},{"ruleId":"143","severity":1,"message":"155","line":142,"column":26,"nodeType":"156","endLine":142,"endColumn":37},{"ruleId":"172","severity":1,"message":"181","line":164,"column":90,"nodeType":"156","messageId":"174","endLine":164,"endColumn":105},{"ruleId":"143","severity":1,"message":"155","line":170,"column":28,"nodeType":"156","endLine":170,"endColumn":39},{"ruleId":"143","severity":1,"message":"182","line":190,"column":6,"nodeType":"145","endLine":190,"endColumn":26,"suggestions":"183"},{"ruleId":"143","severity":1,"message":"184","line":200,"column":6,"nodeType":"145","endLine":200,"endColumn":39,"suggestions":"185"},{"ruleId":"143","severity":1,"message":"186","line":8,"column":6,"nodeType":"145","endLine":8,"endColumn":25,"suggestions":"187"},{"ruleId":"143","severity":1,"message":"188","line":22,"column":6,"nodeType":"145","endLine":22,"endColumn":18,"suggestions":"189"},{"ruleId":"143","severity":1,"message":"190","line":37,"column":6,"nodeType":"145","endLine":37,"endColumn":17,"suggestions":"191"},{"ruleId":"143","severity":1,"message":"192","line":55,"column":6,"nodeType":"145","endLine":55,"endColumn":22,"suggestions":"193"},{"ruleId":"143","severity":1,"message":"194","line":76,"column":6,"nodeType":"145","endLine":76,"endColumn":45,"suggestions":"195"},{"ruleId":"143","severity":1,"message":"190","line":16,"column":8,"nodeType":"145","endLine":16,"endColumn":19,"suggestions":"196"},{"ruleId":"143","severity":1,"message":"197","line":20,"column":8,"nodeType":"145","endLine":20,"endColumn":27,"suggestions":"198"},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setIslogin'. Either include it or remove the dependency array. If 'setIslogin' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["201"],"React Hook useEffect has a missing dependency: 'handleDetail'. Either include it or remove the dependency array.",["202"],"React Hook useCallback has a missing dependency: 'cookingId'. Either include it or remove the dependency array.",["203"],"React Hook useEffect has a missing dependency: 'handleList'. Either include it or remove the dependency array.",["204"],"React Hook useEffect has missing dependencies: 'cookingForm' and 'targetCategory'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCookingForm' needs the current value of 'targetCategory'.",["205"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","React Hook useCallback has missing dependencies: 'group', 'setCategoryOptionArr', and 'setTargetCategory'. Either include them or remove the dependency array. If 'setTargetCategory' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["206"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useCallback has missing dependencies: 'inventoryPopupInfo.modifyMode', 'inventoryPopupInfo.modifyModeName', and 'inventoryPopupInfo.modifyModeUnit'. Either include them or remove the dependency array.",["207"],["208"],"React Hook useCallback has a missing dependency: 'popupCookingId'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'setCalendarData'. Either include it or remove the dependency array.",["210"],"React Hook useEffect has missing dependencies: 'calendarCalc', 'calendarDateInfo.setDate', 'calendarDateInfo.setDay', 'calendarDateInfo.setMonth', and 'calendarDateInfo.setYear'. Either include them or remove the dependency array.",["211"],["212"],"no-unused-vars","'popupCookingId' is assigned a value but never used.","unusedVar","React Hook useCallback has a missing dependency: 'id'. Either include it or remove the dependency array.",["213"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'axios' is defined but never used.","'host' is assigned a value but never used.","'setCalendarData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fullCalendarData.data' and 'onClickDelete'. Either include them or remove the dependency array.",["214"],"React Hook useCallback has a missing dependency: 'setCalendarSelectData'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'callbackOptionFuntion', 'group', 'index', and 'initAdd'. Either include them or remove the dependency array.",["216"],"React Hook useCallback has missing dependencies: 'cookingForm.contents', 'index', 'setHandleValue', and 'targetCategory'. Either include them or remove the dependency array. If 'setHandleValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["217"],"React Hook useCallback has a missing dependency: 'setCategoryOptionArr'. Either include it or remove the dependency array. If 'setCategoryOptionArr' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["218"],"React Hook useEffect has missing dependencies: 'handleValueArr' and 'setHandleValue'. Either include them or remove the dependency array. If 'setHandleValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["219"],"React Hook useCallback has a missing dependency: 'setTargetCategory'. Either include it or remove the dependency array. If 'setTargetCategory' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["220"],["221"],"React Hook useEffect has missing dependencies: 'callbackOptionFuntion', 'group', and 'index'. Either include them or remove the dependency array.",["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"225","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"229","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"255","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [loginValue, setIslogin]",{"range":"264","text":"265"},"Update the dependencies array to be: [handleDetail]",{"range":"266","text":"267"},"Update the dependencies array to be: [cookingId]",{"range":"268","text":"269"},"Update the dependencies array to be: [handleList]",{"range":"270","text":"271"},"Update the dependencies array to be: [cookingForm, handleValue, targetCategory]",{"range":"272","text":"273"},"Update the dependencies array to be: [categoryOptionArr, group, setCategoryOptionArr, setTargetCategory]",{"range":"274","text":"275"},"Update the dependencies array to be: [inventoryInputValue, inventoryPopupInfo.modifyMode, inventoryPopupInfo.modifyModeName, inventoryPopupInfo.modifyModeUnit]",{"range":"276","text":"277"},{"range":"278","text":"267"},"Update the dependencies array to be: [popupCookingId]",{"range":"279","text":"280"},"Update the dependencies array to be: [calendarDateInfo, setCalendarData]",{"range":"281","text":"282"},"Update the dependencies array to be: [calendarCalc, calendarData, calendarDateInfo.setDate, calendarDateInfo.setDay, calendarDateInfo.setMonth, calendarDateInfo.setYear]",{"range":"283","text":"284"},{"range":"285","text":"271"},"Update the dependencies array to be: [setIsListPopup, setIsDetailPopup, setPopupCookingId, id]",{"range":"286","text":"287"},"Update the dependencies array to be: [calendarSelectData, fullCalendarData.data, onClickDelete]",{"range":"288","text":"289"},"Update the dependencies array to be: [setCalendarSelectData, setYear, setWeek, week, eatTime]",{"range":"290","text":"291"},"Update the dependencies array to be: [callbackOptionFuntion, categoryOptionArr, group, index, initAdd]",{"range":"292","text":"293"},"Update the dependencies array to be: [baseOption, cookingForm.contents, index, setHandleValue, targetCategory]",{"range":"294","text":"295"},"Update the dependencies array to be: [optionArr, setCategoryOptionArr]",{"range":"296","text":"297"},"Update the dependencies array to be: [handleValueArr, setHandleValue, targetCategory]",{"range":"298","text":"299"},"Update the dependencies array to be: [cookingForm.contents, group, index, baseOption, setTargetCategory]",{"range":"300","text":"301"},{"range":"302","text":"297"},"Update the dependencies array to be: [callbackOptionFuntion, categoryOptionArr, group, index]",{"range":"303","text":"304"},[971,983],"[loginValue, setIslogin]",[406,408],"[handleDetail]",[685,687],"[cookingId]",[308,310],"[handleList]",[1649,1662],"[cookingForm, handleValue, targetCategory]",[12955,12987],"[categoryOptionArr, group, setCategoryOptionArr, setTargetCategory]",[2561,2582],"[inventoryInputValue, inventoryPopupInfo.modifyMode, inventoryPopupInfo.modifyModeName, inventoryPopupInfo.modifyModeUnit]",[530,532],[869,871],"[popupCookingId]",[3202,3220],"[calendarDateInfo, setCalendarData]",[3374,3388],"[calendarCalc, calendarData, calendarDateInfo.setDate, calendarDateInfo.setDay, calendarDateInfo.setMonth, calendarDateInfo.setYear]",[439,441],[780,833],"[setIsListPopup, setIsDetailPopup, setPopupCookingId, id]",[6669,6689],"[calendarSelectData, fullCalendarData.data, onClickDelete]",[6915,6948],"[setCalendarSelectData, setYear, setWeek, week, eatTime]",[431,450],"[callbackOptionFuntion, categoryOptionArr, group, index, initAdd]",[929,941],"[baseOption, cookingForm.contents, index, setHandleValue, targetCategory]",[1375,1386],"[optionArr, setCategoryOptionArr]",[1757,1773],"[handleValueArr, setHandleValue, targetCategory]",[2380,2419],"[cookingForm.contents, group, index, baseOption, setTargetCategory]",[588,599],[679,698],"[callbackOptionFuntion, categoryOptionArr, group, index]"]